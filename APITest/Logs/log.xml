<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <appSettings>
  </appSettings>
  <log4net>
    <!--定义输出到文件中-->
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender,log4net">
      <!--定义文件存放位置-->
      <file value="Logs\" />
      <!--2. 创建新文件的方式，可选为Size（按文件大小），Date（按日期），Once（每启动一次创建一个文件），Composite（按日期及文件大小），默认为Composite-->
      <rollingStyle value="Composite" />
      <!--3. 当RollingStyle为Composite或Date，这里设置文件名格式-->
      <datePattern value="yyyy-MM/yyyyMMdd.LOG" />
      <!--4. true/false，默认为true。为true时，RollingStyler的date值将无效。且为true时，需要在file里指定文件名，所有日志都会记录在这个文件里。-->
      <staticLogFileName value="false" />
      <!--5. 当rollingStyle为Composite或Size，这里设置最大文件大小（可以KB，MB，GB为单位，默认为字节）-->
      <maximumFileSize value="30MB" />
      <!--6. 默认值为-1。当文件超过MaximumFileSize的大小时，如果要创建新的文件来存储日志，会根据CountDirection的值来重命名文件。  
             大于-1的值时，file里指定的文件名会依次加上.0,.1,.2递增。  
             当等于或小于-1时，创建依赖于MaxSizeRollBackups参数值，创建备份日志数。-->
      <countDirection value="-1" />
      <!--7. 备份日志数目，默认为0。在CountDirection为负数时有效。-->
      <maxSizeRollBackups value="-1" />
      <!--8. true/false，默认为true。当文件存在时，是否在原文件上追加内容。-->
      <appendToFile value="true" />
      <!--输出类型-->
      <param name="Encoding" value="UTF-8" />
      <layout type="log4net.Layout.PatternLayout">
        <!--输出格式-->
        <conversionPattern value=" %n＝＝＝＝＝＝＝＝＝＝%n%-5level  %date %thread %property %n%logger %exception  %L  - %message%newline" />
      </layout>
    </appender>
    <!--SQL数据库-->
    <appender name="ADONetAppender" type="log4net.Appender.ADONetAppender">

      <bufferSize value="5"/>

      <!-- SQL数据源 ，本地安装SQL客户端-->
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>

      <!-- SQL连接字符串-->
      <connectionString value="data source=.;initial catalog=edu;integrated security=False;persist security info=True;User ID=sa;Password=cnki_123" />

      <commandText value="INSERT INTO Log4 ([RecordTime],[LevelName],[Property],[Logger],[Message],[Exception]) VALUES (@log_date, @log_level,@log_property,@logger, @message, @exception)"/>

      <parameter>
        <parameterName value="@log_date"/>
        <dbType value="DateTime"/>
        <layout type="log4net.Layout.RawTimeStampLayout"/>
      </parameter>

      <parameter>
        <parameterName value="@log_level"/>
        <dbType value="String"/>
        <size value="50"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@log_property"/>
        <dbType value="String"/>
        <size value="2000"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%property"/>
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception"/>
        <dbType value="String"/>
        <size value="2000"/>
        <layout type="log4net.Layout.PatternLayout"/>
      </parameter>
      <parameter>
        <parameterName value="@logger"/>
        <dbType value="String"/>
        <size value="255"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger"/>
        </layout>
      </parameter>

      <parameter>
        <parameterName value="@message"/>
        <dbType value="String"/>
        <size value="4000"/>
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message"/>
        </layout>
      </parameter>

    </appender>

    <!--定义日志的输出媒介，下面定义日志以四种方式输出。也可以下面的按照一种类型或其他类型输出。-->
    <root>
      <level value="DEBUG" />
      <!--文件形式记录日志-->
      <appender-ref ref="LogFileAppender" />
      <!--控制台控制显示日志-->
      <!--<appender-ref ref="ConsoleAppender" />-->
      <!--Windows事件日志-->
      <!--<appender-ref ref="EventLogAppender" />-->
      <!-- 如果不启用相应的日志记录，可以通过这种方式注释掉  -->
      <appender-ref ref="ADONetAppender" />

    </root>
  </log4net>
</configuration>